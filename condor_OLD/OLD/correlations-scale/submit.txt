universe = vanilla
requirements = ((opsys == "LINUX") && (arch == "X86_64") && (HAS_R_3_2 =?= True))
notification = never
request_memory = 2000
request_disk = 1000000
executable = /opt/R-3.2.4/bin/R
input = batch.R
should_transfer_files = yes
transfer_executable = false
transfer_input_files = batch.R,R.tar.gz
when_to_transfer_output = ON_EXIT
log = CONDOR.log
output = CONDOR.out
error = CONDOR.err
Rank=kflops

arguments = --vanilla --args $(Cluster) $(Process) 1
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 2
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 3
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 4
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 5
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 6
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 7
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 8
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 9
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 10
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 11
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 12
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 13
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 14
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 15
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 16
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 17
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 18
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 19
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 20
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 21
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 22
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 23
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 24
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 25
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 26
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 27
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 28
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 29
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 30
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 31
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 32
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 33
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 34
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 35
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 36
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 37
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 38
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 39
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 40
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 41
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 42
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 43
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 44
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 45
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 46
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 47
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 48
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 49
queue 10
arguments = --vanilla --args $(Cluster) $(Process) 50
queue 10
