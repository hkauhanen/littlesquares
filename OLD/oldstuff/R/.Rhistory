require(ggrepel)
ggplot(final_results$main_analysis, aes(x=feature_frequency, y=isogloss_density, color=feature_ID)) + xlim(0,1) + ylim(0,0.5) + theme_bw() + stat_summary(geom="point")
ggplot(final_results$main_analysis, aes(x=feature_frequency, y=isogloss_density, color=feature_ID)) + xlim(0,1) + ylim(0,0.5) + theme_bw() + geom_point()
nrow(final_results$main_analysis)
head(final_results$cpp_lattice)
ggplot(final_results$cpp_lattice, aes(x=tau_actual, y=tau)) + geom_point()
ggplot(final_results$cpp_lattice, aes(x=tau_actual, y=tau)) + geom_point() + theme_bw()
nrow(final_results$cpp_lattice)
ggplot(final_results$cpp_lattice, aes(x=tau_actual, y=median(tau))) + geom_point() + theme_bw()
nrow(final_results$cpp_lattice)
ggplot(final_results$cpp_lattice, aes(x=tau_actual, y=tau)) + stat_summary(fun.y=median) + theme_bw()
ggplot(final_results$cpp_lattice, aes(x=tau_actual, y=tau)) + stat_summary(fun.y=median, geom="point") + theme_bw()
ggplot(final_results$cpp_wals, aes(x=tau_actual, y=tau)) + stat_summary(fun.y=median, geom="point") + theme_bw()
ggplot(final_results$cpp_wals, aes(x=tau_actual, y=tau)) + geom_point() + theme_bw()
ggplot(final_results$cpp_wals, aes(x=tau_actual, y=tau)) + stat_summary(fun.y=median, geom="point") + theme_bw()
ggplot(final_results$cpp_wals, aes(x=tau_actual, y=tau)) + stat_summary(fun.y=mean, geom="point") + theme_bw()
ggplot(final_results$cpp_lattice, aes(x=tau_actual, y=tau)) + stat_summary(fun.y=mean, geom="point") + theme_bw()
ggplot(final_results$cpp_wals, aes(x=tau_actual, y=tau)) + stat_summary(fun.y=mean, geom="point") + theme_bw()
ggplot(final_results$cpp_wals, aes(x=tau_actual, y=tau)) + geom_point() + theme_bw()
cor.test(final_results$cpp_wals$tau, final_results$cpp_wals$tau_actual)
cor.test(final_results$cpp_wals$tau, final_results$cpp_wals$tau_actual, method="spearman")
cor.test(final_results$cpp_lattice$tau, final_results$cpp_lattice$tau_actual, method="spearman")
cor.test(final_results$cpp_wals$tau, final_results$cpp_wals$tau_actual, method="spearman")
ggplot(final_results$cpp_wals, aes(x=tau_actual, y=tau)) + geom_point() + theme_bw()
ggplot(final_results$cpp_wals, aes(x=tau_actual, y=tau)) + geom_point() + theme_bw() + scale_y_log10()
ggplot(final_results$cpp_wals, aes(x=tau_actual, y=tau)) + geom_point() + theme_bw() + scale_y_log10() + scale_x_log10()
ggplot(final_results$cpp_wals, aes(x=tau_actual, y=tau)) + geom_point() + theme_bw() + scale_y_log10() + scale_x_log10() + geom_smooth(method="lm")
ggplot(final_results$cpp_lattice, aes(x=tau_actual, y=tau)) + geom_point() + theme_bw() + scale_y_log10() + scale_x_log10() + geom_smooth(method="lm")
ggplot(final_results$cpp_wals, aes(x=tau_actual, y=tau)) + geom_point() + theme_bw() + scale_y_log10() + scale_x_log10() + geom_smooth(method="lm")
ggplot(final_results$cpp_lattice, aes(x=tau_actual, y=tau)) + geom_point() + theme_bw() + scale_y_log10() + scale_x_log10() + geom_smooth(method="lm")
ggplot(final_results$cpp_lattice, aes(x=tau_actual, y=tau)) + geom_point(alpha=0.5) + theme_bw() + scale_y_log10() + scale_x_log10() + geom_smooth(method="lm")
ggplot(final_results$cpp_lattice, aes(x=tau_actual, y=tau)) + geom_point(alpha=0.1) + theme_bw() + scale_y_log10() + scale_x_log10() + geom_smooth(method="lm")
ggplot(final_results$cpp_wals, aes(x=tau_actual, y=tau)) + geom_point(alpha=0.1) + theme_bw() + scale_y_log10() + scale_x_log10() + geom_smooth(method="lm")
ggplot(final_results$cpp_lattice, aes(x=tau_actual, y=tau)) + geom_point(alpha=0.1) + theme_bw() + scale_y_log10() + scale_x_log10() + geom_smooth(method="lm")
ggplot(final_results$cpp_wals, aes(x=tau_actual, y=tau)) + geom_point(alpha=0.1) + theme_bw() + scale_y_log10() + scale_x_log10() + geom_smooth(method="lm")
ggplot(final_results$cpp_wals, aes(x=tau_actual, y=tau, color=ingress_rate)) + geom_point(alpha=0.1) + theme_bw() + scale_y_log10() + scale_x_log10() + geom_smooth(method="lm")
ggplot(final_results$cpp_wals, aes(x=tau_actual, y=tau, color=egress_rate)) + geom_point(alpha=0.1) + theme_bw() + scale_y_log10() + scale_x_log10() + geom_smooth(method="lm")
ggplot(final_results$cpp_lattice, aes(x=tau_actual, y=tau)) + geom_point(alpha=0.1) + theme_bw() + scale_y_log10() + scale_x_log10() + geom_smooth(method="lm")
ggplot(final_results$cpp_wals, aes(x=tau_actual, y=tau)) + geom_point(alpha=0.1) + theme_bw() + scale_y_log10() + scale_x_log10() + geom_smooth(method="lm")
cor.test(log(final_results$cpp_wals$tau), log(final_results$cpp_wals$tau_actual))
cor.test(log(final_results$cpp_lattice$tau), log(final_results$cpp_lattice$tau_actual))
head(final_results$correlations_OWNW)
cor.test(final_results$correlations_OWNW$feature.x, final_results$correlations_OWNW$feature.y, method="spearman")
cor.test(final_results$correlations_OWNW$temperature.x, final_results$correlations_OWNW$temperature.y, method="spearman")
ggplot(final_results$correlations_OWNW, aes(x=temperature.x, y=temperature.y)) + geom_point()
ggplot(final_results$correlations_OWNW, aes(x=temperature.x, y=temperature.y)) + geom_point() + scale_x_log10() + scale_y_log10()
ggplot(final_results$correlations_OWNW, aes(x=temperature.x, y=temperature.y)) + geom_point() + scale_x_log10() + scale_y_log10() + geom_smooth(method="lm")
cor.test(log(final_results$correlations_OWNW$temperature.x), log(final_results$correlations_OWNW$temperature.y), method="spearman")
cor.test(log(final_results$correlations_OWNW$temperature.x), log(final_results$correlations_OWNW$temperature.y))
head(final_results$correlations_OWNW)
min(final_results$correlations_OWNW$sample_size.x)
min(final_results$correlations_OWNW$sample_size.y)
final_results$correlations_OWNW$sample_size.y
length(final_results$correlations_OWNW$sample_size.y)
head(final_results$correlations_geo)
head(final_results$correlations_scale)
final_results$correlations_scale$neighbourhood_size
final_results$correlations_geo$neighbourhood_size
head(final_results$correlations_geo)
final_results$correlations_geo$neighbourhood_size.x
head(final_results$correlations_geo)
head(final_results$correlations_OWNW)
max(final_results$correlations_OWNW$sample_size.x)
max(final_results$correlations_OWNW$sample_size.y)
min(final_results$correlations_OWNW$sample_size.x)
min(final_results$correlations_OWNW$sample_size.y)
head(final_results$main_analysis)
final_results$main_analysis$rep
unique(final_results$main_analysis$rep)
unique(final_results$correlations_OWNW$rep)
unique(final_results$correlations_scale$rep)
unique(final_results$correlations_geo$rep)
unique(final_results$main_analysis$rep)
length(unique(final_results$main_analysis$rep))
class(unique(final_results$main_analysis$rep))
length(unique(factor(final_results$main_analysis$rep)))
read.csv("../condor/main_analysis/res.main_analysis.145667.99.csv")
read.csv("../condor/cpp_lattice/cpp_lattice.res.145677.57.csv")
head(read.csv("../condor/cpp_lattice/cpp_lattice.res.145677.57.csv"))
require(ritwals)
head(WALS)
head(ritwals::WALS)
source("sigmaunits.R"); sigmaunits()
source("sigmaunits.R"); head(sigmaunits())
nrow(WALS)
nrow(sigmaunits())
ritwals::nearest_geo_neighbours(id="snt")
ritwals::nearest_geo_neighbours(id="snt", k=1)
source("sigmaunits.R"); testi <- sigmaunits(unit="family")
source("sigmaunits.R"); testi <- sigmaunits(unit="family", verbose=TRUE)
source("sigmaunits.R"); testi <- sigmaunits(unit="family", verbose=TRUE)
source("sigmaunits.R"); testi <- sigmaunits(unit="family", verbose=TRUE)
source("sigmaunits.R"); testi <- sigmaunits(unit="family", verbose=TRUE)
source("sigmaunits.R"); testi <- sigmaunits(unit="family", verbose=TRUE, data=WALS[WALS$family %in% c("Sentani", "Uralic"), ])
testi
source("sigmaunits.R"); testi <- sigmaunits(unit="family", verbose=TRUE, data=WALS[WALS$family %in% c("Sentani", "Uralic"), ])
source("sigmaunits.R"); testi <- sigmaunits(unit="family", verbose=TRUE, data=WALS[WALS$family %in% c("Sentani", "Uralic"), ])
source("sigmaunits.R"); testi <- sigmaunits(unit="family", verbose=TRUE, data=WALS[WALS$family %in% c("Indo-European", "Uralic"), ])
source("sigmaunits.R"); testi <- sigmaunits(unit="family", verbose=TRUE, data=WALS[WALS$family %in% c("Indo-European", "Uralic"), ])
testi
source("sigmaunits.R"); testi <- sigmaunits(unit="family", verbose=TRUE)
source("sigmaunits.R"); testi <- sigmaunits(unit="genus", verbose=TRUE)
testi
q()
testi <- read.csv("../condor/sigma_bias_family/res.sigma_bias_family.148918.0.csv")
head(testi)
hist(testi$sigma)
testi <- read.csv("../condor/sigma_bias_genus/res.sigma_bias_genus.148919.0.csv")
hist(testi$sigma)
head(WALS)
head(ritwals::WALS)
table(ritwals::WALS$genus)
table(ritwals::WALS$genus)[["Zapotecan"]]
table(ritwals::WALS$genus)[["Zuni"]]
source("sandbox.R"); filter_gen_units(testi, 10)
source("sandbox.R"); filter_gen_units(testi, lim=10)
source("sandbox.R"); filter_gen_units(testi, lim=10)
source("sandbox.R"); filter_gen_units(testi, lim=10)
source("sandbox.R"); filter_gen_units(testi, lim=10)
source("sandbox.R"); filter_gen_units(testi, lim=10)[[c("Zapotecan", "Zuni")]]
source("sandbox.R"); filter_gen_units(testi, lim=10)[[c("Zapotecan")]]
source("sandbox.R"); filter_gen_units(testi, lim=10)[[c("Zapotecan")]]
source("sandbox.R"); filter_gen_units(testi, lim=10)
source("sandbox.R"); filter_gen_units(testi, lim=10)
source("sandbox.R"); filter_gen_units(testi, lim=100)
source("sandbox.R"); hist(filter_gen_units(testi, lim=100)$sigma)
source("sandbox.R"); hist(filter_gen_units(testi, lim=200)$sigma)
source("sandbox.R"); hist(filter_gen_units(testi, lim=100)$sigma)
source("sandbox.R"); hist(filter_gen_units(testi, lim=500)$sigma)
source("sandbox.R"); hist(filter_gen_units(testi, lim=1000)$sigma)
source("sandbox.R"); hist(filter_gen_units(testi, lim=300)$sigma)
testi <- read.csv("../condor/sigma_bias_family/res.sigma_bias_family.148918.0.csv")
source("sandbox.R"); hist(filter_gen_units(testi, lim=300)$sigma)
source("sandbox.R"); hist(filter_gen_units(testi, lim=1000)$sigma)
source("sandbox.R"); hist(filter_gen_units(testi, lim=500)$sigma)
source("sandbox.R"); hist(filter_gen_units(testi, lim=50)$sigma)
source("sandbox.R"); hist(filter_gen_units(testi, lim=100)$sigma)
source("sandbox.R"); hist(filter_gen_units(testi, lim=200)$sigma)
source("sandbox.R"); plot(density(filter_gen_units(testi, lim=200)$sigma))
require(ritwals)
source("analyse.R")
testi <- OW_NW_features(sample_size=50)
q()
source("read.R"); final_results <- read_condor_results()
names(final_results)
head(final_results$correlations_OWNW)
cor.test(final_results$correlations_OWNW$temperature.x, final_results$correlations_OWNW$temperature.y)
cor.test(final_results$correlations_OWNW$temperature.x, final_results$correlations_OWNW$temperature.y, method="spearman")
cor.test(log(final_results$correlations_OWNW$temperature.x), log(final_results$correlations_OWNW$temperature.y), method="spearman")
cor.test(log(final_results$correlations_OWNW$temperature.x), log(final_results$correlations_OWNW$temperature.y))
cor.test(final_results$correlations_OWNW$temperature.x, final_results$correlations_OWNW$temperature.y, method="spearman")
head(final_results$correlations_OWNW)
cor.test(final_results$correlations_OWNW$temperature.x, final_results$correlations_OWNW$temperature.y, method="spearman")
testi <- cor.test(final_results$correlations_OWNW$temperature.x, final_results$correlations_OWNW$temperature.y, method="spearman")
testi$statistic
testi$estimate
testi$p.value
source("stats.R"); compute_OWNW_correlations(final_results$correlations_OWNW)
source("stats.R")
final_results$sigma_bias_family
filter_gen_units(final_results$sigma_bias_family, lim=100)
hist(filter_gen_units(final_results$sigma_bias_family, lim=100)$sigma)
hist(filter_gen_units(final_results$sigma_bias_family, lim=300)$sigma)
hist(filter_gen_units(final_results$sigma_bias_family, lim=500)$sigma)
hist(filter_gen_units(final_results$sigma_bias_family, lim=100)$sigma)
hist(filter_gen_units(final_results$sigma_bias_genus, lim=100)$sigma)
hist(filter_gen_units(final_results$sigma_bias_genus, lim=300)$sigma)
hist(filter_gen_units(final_results$sigma_bias_genus, lim=10)$sigma)
hist(filter_gen_units(final_results$sigma_bias_genus, lim=1)$sigma)
hist(filter_gen_units(final_results$sigma_bias_family, lim=1)$sigma)
hist(filter_gen_units(final_results$sigma_bias_genus, lim=1)$sigma)
hist(filter_gen_units(final_results$sigma_bias_genus, lim=1)$sigma, breaks=50)
hist(filter_gen_units(final_results$sigma_bias_genus, lim=1)$sigma, breaks=30)
hist(filter_gen_units(final_results$sigma_bias_genus, lim=1)$sigma, breaks=50)
hist(filter_gen_units(final_results$sigma_bias_genus, lim=1)$sigma, breaks=100)
hist(filter_gen_units(final_results$sigma_bias_family, lim=1)$sigma, breaks=100)
final_results$correlations_geo
head(final_results$correlations_geo)
cor.test(final_results$correlations_geo$temperature.x, final_results$correlations_geo$temperature.y)
cor.test(final_results$correlations_geo$temperature.x, final_results$correlations_geo$temperature.y, method="spearman")
head(final_results$correlations_geo)
source("stats.R")
compute_tau_correlations_by_rep(final_results$correlations_geo)
mean(compute_tau_correlations_by_rep(final_results$correlations_geo)$spearman)
median(compute_tau_correlations_by_rep(final_results$correlations_geo)$spearman)
mean(compute_tau_correlations_by_rep(final_results$correlations_geo)$spearman)
warnings()
mean(compute_tau_correlations_by_rep(final_results$correlations_geo)$spearman)
compute_tau_correlations_by_rep(final_results$correlations_geo)
head(final_results$correlations_scale)
head(final_results$correlations_scale)
head(final_results$correlations_geo)
source("stats.R"); compute_median_tau_correlations(final_results$correlations_geo)
source("stats.R"); compute_median_tau_correlations(final_results$correlations_geo)
source("stats.R"); compute_median_tau_correlations(final_results$correlations_geo)
source("stats.R"); compute_median_tau_correlation_from_xy(final_results$correlations_geo)
head(final_results$correlations_OWNW)
source("stats.R"); compute_median_tau_correlation_from_xy(final_results$correlations_OWNW)
source("stats.R"); compute_median_tau_correlation_from_xy(final_results$correlations_geo)
head(final_results$correlations_scale)
head(final_results$sigma_bias_family)
final_results$sigma_bias_family
source("stats.R"); compute_median_tau_correlation_from_xy(final_results$correlations_geo)
head(final_results$cpp_wals)
final_results$cpp_wals
head(final_results$cpp_wals)
cor.test(final_results$cpp_wals$tau, final_results$cpp_wals$tau_actual)
cor.test(final_results$cpp_wals$tau, final_results$cpp_wals$tau_actual, method="spearman")
cor.test(final_results$cpp_wals$tau, final_results$cpp_wals$tau_actual, method="spearman")$p.value
cor.test(final_results$cpp_wals$tau, final_results$cpp_wals$tau_actual, method="spearman")
cor.test(final_results$cpp_lattice$tau, final_results$cpp_lattice$tau_actual, method="spearman")
head(final_results$correlations_geo)
source("stats.R"); compute_tau_correlations_by_rep(final_results$correlations_geo)
mean(source("stats.R"); compute_tau_correlations_by_rep(final_results$correlations_geo)$spearman)
source("stats.R"); mean(compute_tau_correlations_by_rep(final_results$correlations_geo)$spearman)
source("stats.R"); min(compute_tau_correlations_by_rep(final_results$correlations_geo)$spearman)
source("stats.R"); max(compute_tau_correlations_by_rep(final_results$correlations_geo)$spearman)
source("stats.R"); mean(compute_tau_correlations_by_rep(final_results$correlations_OWNW)$spearman)
source("stats.R"); compute_tau_correlations_by_rep(final_results$correlations_OWNW)$spearman
head(final_results$correlations_OWNW)
source("stats.R"); compute_median_tau_correlation_from_xy(final_results$correlations_OWNW)$spearman
source("stats.R"); compute_median_tau_correlation_from_xy(final_results$correlations_OWNW)
source("stats.R"); compute_tau_correlations_by_rep(final_results$correlations_OWNW)$spearman
source("stats.R"); mean(compute_tau_correlations_by_rep(final_results$correlations_OWNW)$spearman)
source("stats.R"); compute_median_tau_correlation_from_xy(final_results$correlations_OWNW)
q()
ls()
source("read.R")
final_results <- read_condor_results()
head(final_results$correlations_geo)
head(final_results$correlations_geo)
source("stats.R")
compute_median_tau_correlation_from_xy(final_results$correlations_geo)
compute_tau_correlations_by_rep(final_results$correlations_geo)
compute_tau_correlations_by_rep(final_results$correlations_geo)$spearman
median(compute_tau_correlations_by_rep(final_results$correlations_geo)$spearman)
head(final_results$correlations_OWNW)
median(compute_tau_correlations_by_rep(final_results$correlations_OWNW)$spearman)
compute_median_tau_correlation_from_xy(final_results$correlations_OWNW)
median(compute_tau_correlations_by_rep(final_results$correlations_OWNW)$spearman)
compute_tau_correlations_by_rep(final_results$correlations_OWNW)$spearman
head(final_results$correlations_OWNW)
compute_tau_correlations_by_rep(final_results$correlations_OWNW[final_results$correlations_OWNW$sample_size.x > 150 & final_results$correlations_OWNW$sample_size.y > 150, ])$spearman
compute_tau_correlations_by_rep(final_results$correlations_OWNW[final_results$correlations_OWNW$sample_size.x > 300 & final_results$correlations_OWNW$sample_size.y > 300, ])$spearman
compute_tau_correlations_by_rep(final_results$correlations_OWNW[final_results$correlations_OWNW$sample_size.x > 200 & final_results$correlations_OWNW$sample_size.y > 200, ])$spearman
compute_tau_correlations_by_rep(final_results$correlations_OWNW[final_results$correlations_OWNW$sample_size.x > 100 & final_results$correlations_OWNW$sample_size.y > 100, ])$spearman
compute_tau_correlations_by_rep(final_results$correlations_OWNW[final_results$correlations_OWNW$sample_size.x > 120 & final_results$correlations_OWNW$sample_size.y > 120, ])$spearman
compute_tau_correlations_by_rep(final_results$correlations_OWNW[final_results$correlations_OWNW$sample_size.x > 180 & final_results$correlations_OWNW$sample_size.y > 180, ])$spearman
compute_tau_correlations_by_rep(final_results$correlations_OWNW[final_results$correlations_OWNW$sample_size.x >= 150 & final_results$correlations_OWNW$sample_size.y >= 150, ])$spearman
compute_tau_correlations_by_rep(final_results$correlations_OWNW[final_results$correlations_OWNW$sample_size.x >= 150 & final_results$correlations_OWNW$sample_size.y >= 150, ])$p.value
median(compute_tau_correlations_by_rep(final_results$correlations_geo)$spearman)
max(compute_tau_correlations_by_rep(final_results$correlations_geo)$spearman)
min(compute_tau_correlations_by_rep(final_results$correlations_geo)$spearman)
source("forpaper.R")
stats_for_appendix()
source("forpaper.R")
stats_for_appendix()
source("forpaper.R")
stats_for_appendix()
source("forpaper.R")
stats_for_appendix()
warnings()
source("forpaper.R"); stats_for_appendix()
source("forpaper.R"); stats_for_appendix()
source("forpaper.R"); stats_for_appendix()
source("forpaper.R"); stats_for_appendix()
head(final_results$correlations_scale)
source("plotting.R")
plot.correlations_scale(final_results$correlations_scale)
plot.correlations_scale(final_results$correlations_scale, testee=1)
plot.correlations_scale(final_results$correlations_scale, testee=10)
plot.correlations_scale(final_results$correlations_scale)
plot.correlations_scale(final_results$correlations_scale, testee=50)
plot.correlations_scale(final_results$correlations_scale, testee=49)
plot.correlations_scale(final_results$correlations_scale, testee=20)
plot.correlations_scale(final_results$correlations_scale, testee=21)
plot.correlations_scale(final_results$correlations_scale, testee=22)
plot.correlations_scale(final_results$correlations_scale, testee=10)
head(final_results$correlations_scale)
sort(c(5,2,1))
source("stats.R"); scale_correlations_sequential()
source("stats.R"); scale_correlations_sequential()
head(final_results$correlations_scale)
nrow(final_results$correlations_scale)
source("stats.R"); scale_correlations_sequential()
source("stats.R"); scale_correlations_sequential()
source("stats.R"); scale_correlations_sequential()
source("stats.R"); scale_correlations_sequential()
source("stats.R"); scale_correlations_sequential()
source("stats.R"); scale_correlations_sequential()
source("stats.R"); scale_correlations_sequential()
source("stats.R"); scale_correlations_sequential()
source("stats.R"); scale_correlations_sequential()
source("stats.R"); scale_correlations_sequential()
q()
final_results_eta50 <- read_condor_results(folder="../condor50")
erkki <- cat_csv("../condor50/correlations_geo", pattern="^res.")
head(erkki)
erkki2 <- cat_csv("../condor50/correlations_OWNW", pattern="^res.")
erkki <- list(correlations_geo=erkki, correlations_OWNW=erkki2)
stats_for_appendix(erkki)
stats_for_appendix(final_results)
source("forpaper.R"); stats_for_appendix(erkki)
source("forpaper.R"); stats_for_appendix(erkki)
source("forpaper.R"); stats_for_appendix(erkki)
source("forpaper.R"); stats_for_appendix(erkki)
source("forpaper.R"); stats_for_appendix(erkki)
source("forpaper.R"); stats_for_appendix(final_results)
source("forpaper.R"); stats_for_appendix(final_results, lim=150)
source("forpaper.R"); stats_for_appendix(final_results, lim=150)
source("forpaper.R"); stats_for_appendix(final_results, lim=250)
source("forpaper.R"); stats_for_appendix(final_results, lim=300)
source("forpaper.R"); stats_for_appendix(final_results, lim=200)
source("forpaper.R"); stats_for_appendix(final_results, lim=100)
source("forpaper.R"); stats_for_appendix(final_results, lim=50)
source("forpaper.R"); stats_for_appendix(final_results, lim=10)
source("forpaper.R"); stats_for_appendix(final_results, lim=150)
source("forpaper.R"); stats_for_appendix(final_results, lim=180)
source("forpaper.R"); stats_for_appendix(final_results, lim=130)
source("forpaper.R"); stats_for_appendix(final_results, lim=150)
source("forpaper.R"); stats_for_appendix(final_results)
source("forpaper.R"); stats_for_appendix(erkki)
source("stats.R"); scale_correlations_sequential()
require(ggplot2)
source("stats.R"); scale_correlations_sequential()
source("plotting.R"); plot.correlations_scale(final_results$correlations_scale, testee=NA)
source("plotting.R"); plot.correlations_scale(final_results$correlations_scale, testee=10)
head(final_results$correlations_scale)
?aggregate
erkki <- final_results[final_results$neighbourhood_size==1, ]
erkki <- final_results$correlations_scale[final_results$correlations_scale$neighbourhood_size==1, ]
head(erkki)
aggregate(erkki, by=feature_ID, FUN=mean)
aggregate(erkki, by=1, FUN=mean)
?aggregate
aggregate(erkki, by=list(feature_ID), FUN=mean)
aggregate(erkki, by=list(feature_ID=feature_ID), FUN=mean)
head(erkki)
?aggregate
aggregate(erkki, list(feature_ID=feature_ID), mean)
aggregate(erkki, list(feature_ID=erkki$feature_ID), mean)
warnings()
aggregate(erkki, list(erkki$feature_ID), mean)
aggregate(erkki, erkki$feature_ID, mean)
aggregate(erkki, list(erkki$feature_ID), mean)
aggregate(erkki, list(feature_ID=erkki$feature_ID), mean)
aggregate(erkki, list(erkki$feature_ID), mean)
?cor.test
source("stats.R"); erkki <- scale_correlations_matrix(final_results$correlations_scale)
source("stats.R"); erkki <- scale_correlations_matrix(final_results$correlations_scale)
source("stats.R"); erkki <- scale_correlations_matrix(final_results$correlations_scale)
source("stats.R"); erkki <- scale_correlations_matrix(final_results$correlations_scale)
source("stats.R"); erkki <- scale_correlations_matrix(final_results$correlations_scale)
source("stats.R"); erkki <- scale_correlations_matrix(final_results$correlations_scale)
source("stats.R"); erkki <- scale_correlations_matrix(final_results$correlations_scale)
source("stats.R"); erkki <- scale_correlations_matrix(final_results$correlations_scale)
source("stats.R"); erkki <- scale_correlations_matrix(final_results$correlations_scale)
source("stats.R"); erkki <- scale_correlations_matrix(final_results$correlations_scale)
source("stats.R"); erkki <- scale_correlations_matrix(final_results$correlations_scale)
source("stats.R"); erkki <- scale_correlations_matrix(final_results$correlations_scale)
source("stats.R"); erkki <- scale_correlations_matrix(final_results$correlations_scale)
source("stats.R"); erkki <- scale_correlations_matrix(final_results$correlations_scale)
source("stats.R"); erkki <- scale_correlations_matrix(final_results$correlations_scale)
source("stats.R"); erkki <- scale_correlations_matrix(final_results$correlations_scale)
source("stats.R"); erkki <- scale_correlations_matrix(final_results$correlations_scale)
source("stats.R"); erkki <- scale_correlations_matrix(final_results$correlations_scale)
source("stats.R"); erkki <- scale_correlations_matrix(final_results$correlations_scale)
source("stats.R"); erkki <- scale_correlations_matrix(final_results$correlations_scale)
source("stats.R"); erkki <- scale_correlations_matrix(final_results$correlations_scale)
warnings()
head(erkki)
ggplot(erkki, aes(x=x, y=y, fill=z)) + geom_tile()
ggplot(erkki, aes(x=x, y=y, fill=z)) + geom_tile()
source("stats.R"); erkki <- scale_correlations_matrix(final_results$correlations_scale)
ggplot(erkki, aes(x=x, y=y, fill=z)) + geom_tile()
source("stats.R"); erkki <- scale_correlations_matrix(final_results$correlations_scale)
ggplot(erkki, aes(x=x, y=y, fill=z)) + geom_tile()
head(final_results$correlations_scale)
head(final_results$correlations_scale[final_results$correlations_scale$neighbourhood_size==1 & final_results$correlations_scale$feature_ID=="4A", ])
nrow(final_results$correlations_scale[final_results$correlations_scale$neighbourhood_size==1 & final_results$correlations_scale$feature_ID=="4A", ])
erkki
erkki[erkki$x==100 & erkki$y==100, ]
erkki[erkki$x==100 & erkki$y==97, ]
erkki[erkki$x==97 & erkki$y==100, ]
source("stats.R"); scale_correlations_sequential()
source("misc.R"); print_condor_script_scale_correlations(reps=10, neighbourhood_sizes=1:50, outfile="../tmp/scales.txt")
head(final_results$sigma_bias_family)
hist(final_results$sigma_bias_family$sigma)
hist(final_results$sigma_bias_genus$sigma)
hist(final_results$sigma_bias_genus$sigma, log="y")
hist(final_results$sigma_bias_genus$sigma)
final_results$sigma_bias_genus
filter_gen_units(final_results$sigma_bias_genus, lim=50)
hist(filter_gen_units(final_results$sigma_bias_genus, lim=50))
hist(filter_gen_units(final_results$sigma_bias_genus, lim=50)$sigma)
hist(filter_gen_units(final_results$sigma_bias_genus, lim=10)$sigma)
hist(filter_gen_units(final_results$sigma_bias_genus, lim=100)$sigma)
source("stats.R"); filter_gen_units(final_results$sigma_bias_genus, lim=50)
source("stats.R"); filter_gen_units(final_results$sigma_bias_genus, lim=50)
ritwals::WALS[["genus"]]
table(ritwals::WALS[["genus"]])
table(ritwals::WALS_languages[["genus"]])
source("stats.R"); filter_gen_units(final_results$sigma_bias_genus, lim=50)
source("stats.R"); filter_gen_units(final_results$sigma_bias_genus, lim=5)
source("stats.R"); filter_gen_units(final_results$sigma_bias_genus, lim=1)
source("stats.R"); filter_gen_units(final_results$sigma_bias_genus, lim=0)
table(ritwals::WALS_languages[["genus"]])
table(ritwals::WALS_languages[["genus"]])[["Zamucoan"]]
table(ritwals::WALS_languages[["genus"]])[["Zapotecan"]]
source("stats.R"); filter_gen_units(final_results$sigma_bias_genus, lim=0)
source("stats.R"); filter_gen_units(final_results$sigma_bias_genus, lim=0)
source("stats.R"); filter_gen_units(final_results$sigma_bias_genus, lim=0)
source("stats.R"); filter_gen_units(final_results$sigma_bias_genus, lim=1)
source("stats.R"); filter_gen_units(final_results$sigma_bias_genus, lim=10)
source("stats.R"); filter_gen_units(final_results$sigma_bias_genus, lim=10)
source("stats.R"); hist(filter_gen_units(final_results$sigma_bias_genus, lim=10)$sigma)
source("stats.R"); hist(filter_gen_units(final_results$sigma_bias_genus, lim=50)$sigma)
source("stats.R"); hist(filter_gen_units(final_results$sigma_bias_family, lim=50)$sigma)
source("stats.R"); hist(filter_gen_units(final_results$sigma_bias_family, lim=1)$sigma)
source("stats.R"); hist(filter_gen_units(final_results$sigma_bias_family, lim=10)$sigma)
source("stats.R"); hist(filter_gen_units(final_results$sigma_bias_family, lim=20)$sigma)
source("stats.R"); hist(filter_gen_units(final_results$sigma_bias_family, lim=2)$sigma)
source("stats.R"); hist(filter_gen_units(final_results$sigma_bias_family, lim=1)$sigma)
source("stats.R"); plot(density(filter_gen_units(final_results$sigma_bias_family, lim=1)$sigma))
source("stats.R"); plot(density(filter_gen_units(final_results$sigma_bias_family, lim=2)$sigma))
source("stats.R"); hist(filter_gen_units(final_results$sigma_bias_family, lim=2)$sigma)
source("stats.R"); hist(filter_gen_units(final_results$sigma_bias_family, lim=2)$sigma, breaks=50)
source("stats.R"); hist(filter_gen_units(final_results$sigma_bias_family, lim=2)$sigma, breaks=20)
source("stats.R"); hist(filter_gen_units(final_results$sigma_bias_family, lim=2)$sigma, breaks=10)
plot(sigma~N, filter_gen_units(final_results$sigma_bias_family, lim=2))
plot(sigma~log(N), filter_gen_units(final_results$sigma_bias_family, lim=2))
log(2)
plot(sigma~log(N), filter_gen_units(final_results$sigma_bias_family, lim=1))
plot(sigma~log(N), filter_gen_units(final_results$sigma_bias_genus, lim=1))
plot(sigma~log(N), filter_gen_units(final_results$sigma_bias_genus, lim=2))
plot(sigma~log(N), filter_gen_units(final_results$sigma_bias_genus, lim=10))
source("stats.R"); hist(filter_gen_units(final_results$sigma_bias_family, lim=10)$sigma, breaks=20)
source("stats.R"); hist(filter_gen_units(final_results$sigma_bias_genus, lim=10)$sigma, breaks=20)
q()
ls()
final_results$sigma_bias_genus
require(ggplot2)
ggplot(final_results$sigma_bias_genus, aes(x=sigma)) + geom_density()
ggplot(final_results$sigma_bias_family, aes(x=sigma)) + geom_density()
head(final_results$cpp_lattice)
head(final_results$correlations_scale)
unique(final_results$correlations_scale$neighbourhood_size)
ggplot(final_results$correlations_scale$neighbourhood_size, aes(x=neighbourhood_size, y=temperature, color=feature_ID)) + geom_point()
ggplot(final_results$correlations_scale, aes(x=neighbourhood_size, y=temperature, color=feature_ID)) + geom_point()
ggplot(final_results$correlations_scale, aes(x=neighbourhood_size, y=temperature, color=feature_ID)) + geom_line()
ggplot(final_results$correlations_scale, aes(x=neighbourhood_size, y=temperature, color=feature_ID)) + geom_point() + scale_y_log10()
ggplot(final_results$correlations_scale, aes(x=neighbourhood_size, y=temperature)) + geom_point() + scale_y_log10() + facet_wrap(.~feature_ID)
nrow(final_results$correlations_scale)
length(unique(final_results$correlations_scale$neighbourhood_size))
11900/34
ggplot(final_results$correlations_scale, aes(x=neighbourhood_size, y=temperature)) + geom_point(alpha=0.2) + scale_y_log10() + facet_wrap(.~feature_ID) + geom_smooth()
source("plotting.R")
plot.correlations_scale(final_results$correlations_scale)
plot.correlations_scale(final_results$correlations_scale, testee=10)
plot.correlations_scale(final_results$correlations_scale, testee=1)
plot.correlations_scale(final_results$correlations_scale, testee=20)
plot.correlations_scale(final_results$correlations_scale, testee=30)
plot.correlations_scale(final_results$correlations_scale, testee=50)
plot.correlations_scale(final_results$correlations_scale, testee=28)
plot.correlations_scale(final_results$correlations_scale, testee=50)
plot.correlations_scale(final_results$correlations_scale, testee=NA)
plot.correlations_scale(final_results$correlations_scale, testee=4)
plot.correlations_scale(final_results$correlations_scale, testee=1)
plot.correlations_scale(final_results$correlations_scale, testee=10)
plot.correlations_scale(final_results$correlations_scale, testee=4)
source("plotting.R")
plot.correlations_scale_subsequent(final_results$correlations_scale)
plot.correlations_scale_subsequent(final_results$correlations_scale)
source("plotting.R")
plot.correlations_scale_subsequent(final_results$correlations_scale)
plot.correlations_scale(final_results$correlations_scale, testee=10)
?geom_smooth
source("plotting.R")
plot.correlations_scale(final_results$correlations_scale, testee=10, smoothspan=0.9
)
plot.correlations_scale(final_results$correlations_scale, testee=10, smoothspan=0.5)
plot.correlations_scale(final_results$correlations_scale, testee=10, smoothspan=0.2)
plot.correlations_scale(final_results$correlations_scale, testee=10, smoothspan=0.3)
plot.correlations_scale(final_results$correlations_scale, testee=10, smoothspan=0.1)
plot.correlations_scale(final_results$correlations_scale, testee=10, smoothspan=0.2)
source("plotting.R"); plot.correlations_scale_matrix(final_results$correlations_scale)
source("plotting.R"); plot.correlations_scale_matrix(final_results$correlations_scale)
source("plotting.R"); plot.correlations_scale_matrix(final_results$correlations_scale)
source("plotting.R"); plot.correlations_scale_matrix(final_results$correlations_scale)
source("plotting.R"); plot.correlations_scale_matrix(final_results$correlations_scale)
plot.correlations_scale(final_results$correlations_scale, testee=10, smoothspan=0.2)
ritwals::nearest_geo_neighbours
plot.correlations_scale(final_results$correlations_scale, testee=20, smoothspan=0.2)
sort(unique(final_results$correlations_scale$neighbourhood_size))
plot.correlations_scale(final_results$correlations_scale, testee=22, smoothspan=0.2)
plot.correlations_scale(final_results$correlations_scale, testee=1, smoothspan=0.2)
plot.correlations_scale(final_results$correlations_scale, testee=22, smoothspan=0.2)
plot.correlations_scale(final_results$correlations_scale, testee=50, smoothspan=0.2)
plot.correlations_scale(final_results$correlations_scale, testee=52, smoothspan=0.2)
plot.correlations_scale(final_results$correlations_scale, smoothspan=0.2)
plot.correlations_scale(final_results$correlations_scale, testee=49, smoothspan=0.2)
head(final_results$main_analysis)
q()
ls()
plot.correlations_scale(final_results$correlations_scale, testee=1)
require(ggplot2)
plot.correlations_scale(final_results$correlations_scale, testee=1)
source("plotting.R"); plot.correlations_scale(final_results$correlations_scale, testee=1)
source("plotting.R"); plot.correlations_scale(final_results$correlations_scale, testee=1)
source("plotting.R"); plot.correlations_scale(final_results$correlations_scale, testee=1)
source("plotting.R"); plot.correlations_scale(final_results$correlations_scale, testee=49)
q()
