?install.packages
instal.packages("../ritwals_0.0.0.9000.tar.gz", repos=NULL)
install.packages("../ritwals_0.0.0.9000.tar.gz", repos=NULL)
require(ritwals)
head(WALS)
install.packages("../dyntyp_0.0.0.9000.tar.gz", repos=NULL)
require(dyntyp)
require(ritwals)
temperature(id="4A", up=c(2,3,4), down=1, resample_size=300, neighbourhood_size=10)
install.packages("../dyntyp_0.0.0.9000.tar.gz", repos=NULL)
temperature(id="4A", up=c(2,3,4), down=1, resample_size=300, neighbourhood_size=10)
temperature(id="4A", up=c(2,3,4), down=1, resample_size=300, neighbourhood_size=10)
install.packages("../dyntyp_0.0.0.9000.tar.gz", repos=NULL)
require(dyntyp)
temperature(id="4A", up=c(2,3,4), down=1, resample_size=300, neighbourhood_size=10)
q()
require(dyntyp)
temperature(id="4A", up=c(2,3,4), down=1, resample_size=300, neighbourhood_size=10)
install.packages("../dyntyp_0.0.0.9000.tar.gz", repos=NULL)
q()
require(dyntyp)
install.packages("../dyntyp_0.0.0.9000.tar.gz", repos=NULL)
temperature(id="4A", up=c(2,3,4), down=1, resample_size=300, neighbourhood_size=10)
temperature(id="4A", up=c(2,3,4), down=1, resample_size=30, neighbourhood_size=10)
temperature(id="4A", up=c(2,3,4), down=1, resample_size=30, neighbourhood_size=10)
temperature(id="4A", up=c(2,3,4), down=1, resample_size=30, neighbourhood_size=10)
temperature(id="4A", up=c(2,3,4), down=1, resample_size=30, neighbourhood_size=10)
temperature(id="4A", up=c(2,3,4), down=1, resample_size=30, neighbourhood_size=10)
source("analyse.R")
source("analyse.R")
source("analyse.R")
source("analyse.R")
do_all_features()
featurelist
read.csv("../data/unsilly-features.csv")
source("analyse.R")
do_all_features()
paste("1,2,3", collapse=",")
collapse("1,2,3", ",")
strsplit("1,2,3", ",")
unlist(strsplit("1,2,3", ","))
source("analyse.R")
do_all_features()
source("analyse.R"); do_all_features()
source("analyse.R"); do_all_features()
warnings()
source("analyse.R"); do_all_features(sample_size=3)
source("analyse.R"); erkki <- do_all_features(sample_size=3)
source("analyse.R"); erkki <- do_all_features(sample_size=30)
head(erkki)
erkki
featurelist
nrow(featurelist)
head(featurelist)
install.packages("../dyntyp_0.0.0.9000.tar.gz", repos=NULL)
q()
source("analyse.R")
source("analyse.R")
source("analyse.R"); erkki <- do_all_features(sample_size=3)
erkki
head(erkki)
source("analyse.R"); erkki <- do_all_features(sample_size=3)
erkki
head(erkki)
source("analyse.R"); erkki <- do_all_features(sample_size=5, neighbourhood_size=7)
head(erkki)
source("analyse.R"); erkki <- do_all_features(sample_size=5, neighbourhood_size=7)
head(erkki)
source("analyse.R"); erkki <- do_all_features(sample_size=5, neighbourhood_size=7)
source("analyse.R"); erkki <- do_all_features(sample_size=5, neighbourhood_size=7)
source("analyse.R"); arkki <- correlate_features(sample_size=5, neighbourhood_size=7)
source("analyse.R"); arkki <- correlate_features(sample_size=5, neighbourhood_size=7)
source("analyse.R"); arkki <- correlate_features(sample_size=10, neighbourhood_size=7)
source("analyse.R"); arkki <- correlate_features(sample_size=30, neighbourhood_size=7)
head(arkki)
cor.test(arkki$temperature.x, arkki$temperature.y, method="spearman")
source("analyse.R"); erkki <- do_all_features(sample_size=5, neighbourhood_size=7)
q()
source("analyse.R")
source("analyse.R"); erkki <- do_all_features(sample_size=5, neighbourhood_size=7)
head(erkki)
q()
source("analyse.R"); arkki <- correlate_features(sample_size=30, neighbourhood_size=7)
head(arkki)
?install.packages
?.libPaths
?install.packages
q()
source("misc.R")
print_condor_script_scale_correlations(reps=10, outfile="tmp.txt")
q()
source("toolbox.R")
res.main_analysis <- cat_csv("../condor/main-analysis", pattern="^res.")
head(res.main_analysis)
res.main_analysis$rep
head(res.main_analysis)
res.main_analysis[40,]
res.main_analysis[4,]
res.main_analysis[10,]
res.main_analysis[11,]
res.main_analysis[100,]
res.main_analysis[99,]
res.main_analysis[98,]
res.main_analysis[95,]
nrow(res.main_analysis)
35*100
35*500
head(res.main_analysis)
require(ggplot2)
ggplot(res.main_analysis, aes(x=feature_frequency, y=isogloss_density)) + geom_point()
ggplot(res.main_analysis, aes(x=feature_frequency, y=isogloss_density, color=feature_ID)) + geom_point()
ggplot(res.main_analysis, aes(x=feature_frequency, y=isogloss_density, color=feature_ID)) + geom_point(alpha=0.1)
ggplot(res.main_analysis, aes(x=feature_frequency, y=isogloss_density, color=feature_ID)) + geom_point(alpha=0.5) + theme_bw()
ggplot(res.main_analysis, aes(x=feature_frequency, y=isogloss_density, color=feature_ID)) + geom_point(alpha=0.1) + theme_bw()
res.correlations_scale <- cat_csv("../condor/correlations-scale", pattern="^res.")
ggplot(res.correlations_scale, aes(x=feature_frequency, y=isogloss_density, color=feature_ID)) + geom_point(alpha=0.1) + theme_bw()
ggplot(res.correlations_scale[res.correlations_scale$neighbourhood_size==50, ], aes(x=feature_frequency, y=isogloss_density, color=feature_ID)) + geom_point(alpha=0.1) + theme_bw()
ggplot(res.correlations_scale[res.correlations_scale$neighbourhood_size==50, ], aes(x=feature_frequency, y=isogloss_density, color=feature_ID)) + geom_point(alpha=1) + theme_bw()
ggplot(res.correlations_scale[res.correlations_scale$neighbourhood_size==5, ], aes(x=feature_frequency, y=isogloss_density, color=feature_ID)) + geom_point(alpha=1) + theme_bw()
cor.test(1:10, 4:14)
cor.test(1:10, 4:15)
cor.test(1:10, 4:13)
erkki <- cor.test(1:10, 4:13)
erkki$estimate
source("plotting.R"); plot.correlations_scale(res.correlations_scale)
source("plotting.R"); plot.correlations_scale(res.correlations_scale)
source("plotting.R"); plot.correlations_scale(res.correlations_scale)
source("plotting.R"); plot.correlations_scale(res.correlations_scale)
source("plotting.R"); plot.correlations_scale(res.correlations_scale)
source("plotting.R"); plot.correlations_scale(res.correlations_scale)
warnings()
warnings()
source("plotting.R"); plot.correlations_scale(res.correlations_scale)
source("plotting.R"); plot.correlations_scale(res.correlations_scale)
source("plotting.R"); plot.correlations_scale(res.correlations_scale)
source("plotting.R"); plot.correlations_scale(res.correlations_scale)
source("plotting.R"); plot.correlations_scale(res.correlations_scale)
source("plotting.R"); plot.correlations_scale(res.correlations_scale)
source("plotting.R"); plot.correlations_scale(res.correlations_scale)
source("plotting.R"); plot.correlations_scale(res.correlations_scale)
source("plotting.R"); plot.correlations_scale(res.correlations_scale)
source("plotting.R"); plot.correlations_scale(res.correlations_scale)
source("plotting.R"); plot.correlations_scale(res.correlations_scale)
source("plotting.R"); plot.correlations_scale(res.correlations_scale)
source("plotting.R"); plot.correlations_scale(res.correlations_scale)
source("plotting.R"); plot.correlations_scale(res.correlations_scale)
res.correlations_scale[res.correlations_scale$neighbourhood_size==10, ]
nrow(res.correlations_scale[res.correlations_scale$neighbourhood_size==10, ])
res.correlations_scale[res.correlations_scale$neighbourhood_size==10, ]$temperature
head(res.correlations_scale)
source("plotting.R"); plot.correlations_scale(res.correlations_scale)
source("plotting.R"); plot.correlations_scale(res.correlations_scale)
source("plotting.R"); plot.correlations_scale(res.correlations_scale)
source("plotting.R"); plot.correlations_scale(res.correlations_scale)
source("plotting.R"); plot.correlations_scale(res.correlations_scale)
res.correlations_scale[res.correlations_scale$neighbourhood_size==2, ]
nrow(res.correlations_scale[res.correlations_scale$neighbourhood_size==2, ])
unique(res.correlations_scale$rep)
nrow(res.correlations_scale[res.correlations_scale$neighbourhood_size==2, ])
res.correlations_scale[res.correlations_scale$neighbourhood_size==2, ]
source("plotting.R"); plot.correlations_scale(res.correlations_scale)
source("plotting.R"); plot.correlations_scale(res.correlations_scale)
head(res.correlations_scale)
source("plotting.R"); plot.correlations_scale(res.main_analysis)
source("plotting.R"); plot.correlations_scale(res.main_analysis)
source("plotting.R"); plot.correlations_scale(res.main_analysis)
source("plotting.R"); plot.correlations_scale(res.main_analysis)
warnings()
source("plotting.R"); plot.correlations_scale(res.main_analysis)
source("plotting.R"); plot.correlations_scale(res.main_analysis)
source("plotting.R"); plot.correlations_scale(res.main_analysis)
source("plotting.R"); plot.correlations_scale(res.main_analysis)
source("plotting.R"); plot.correlations_scale(res.main_analysis)
50*50
print_condor_script_scale_correlations(reps=50, neighbourhood_sizes=seq(from=1, to=100, by=2), outfile="tmp.txt")
seq(from=1, to=100, by=2)
sink()
seq(from=1, to=100, by=2)
exp(seq(from=log(1), to=log(100), length.out=50)
)
exp(seq(from=log(1), to=log(100), length.out=50))
floor(exp(seq(from=log(1), to=log(100), length.out=50)))
unique(floor(exp(seq(from=log(1), to=log(100), length.out=50))))
length(unique(floor(exp(seq(from=log(1), to=log(100), length.out=50)))))
unique(floor(exp(seq(from=log(1), to=log(100), length.out=40))))
length(unique(floor(exp(seq(from=log(1), to=log(100), length.out=40)))))
length(unique(floor(exp(seq(from=log(1), to=log(100), length.out=41)))))
length(unique(floor(exp(seq(from=log(1), to=log(100), length.out=42)))))
30*50
unique(floor(exp(seq(from=log(1), to=log(100), length.out=42))))
source("misc.R"); print_condor_script_scale_correlations(outfile="tmp.txt")
q()
erkki <- cat_csv("../condor/OLD/correlations-scale", pattern="^res.")
source("plotting.R"); plot.correlations_scale(erkki)
head(erkki)
source("plotting.R"); plot.correlations_scale(erkki)
source("plotting.R"); plot.correlations_scale(erkki)
source("plotting.R"); plot.correlations_scale(erkki)
head(res.correlations_scale)
head(erkki)
source("plotting.R"); plot.correlations_scale(erkki)
warnings()
source("plotting.R"); plot.correlations_scale(erkki)
head(erkki)
source("plotting.R"); plot.correlations_scale(erkki)
source("plotting.R"); plot.correlations_scale(erkki)
source("plotting.R"); plot.correlations_scale(erkki)
source("plotting.R"); plot.correlations_scale(erkki)
source("plotting.R"); plot.correlations_scale(erkki)
source("plotting.R"); plot.correlations_scale(erkki)
source("plotting.R"); plot.correlations_scale(erkki)
source("plotting.R"); plot.correlations_scale(erkki, testee=1)
source("plotting.R"); plot.correlations_scale(erkki, testee=10)
source("plotting.R"); plot.correlations_scale(erkki, testee=50)
source("plotting.R"); plot.correlations_scale(erkki, testee=10)
source("plotting.R"); plot.correlations_scale(erkki, testee=25)
source("plotting.R"); plot.correlations_scale(erkki, testee=24)
source("plotting.R"); plot.correlations_scale(erkki, testee=20)
erkki[erkki$neighbourhood_size==24, ]
ggplot(erkki[erkki$neighbourhood_size==24, ], aes(x=feature_frequency, y=isogloss_density, color=feature_ID)) + geom_point()
ggplot(erkki[erkki$neighbourhood_size==1, ], aes(x=feature_frequency, y=isogloss_density, color=feature_ID)) + geom_point()
source("plotting.R"); plot.correlations_scale(erkki, testee=1)
source("plotting.R"); plot.correlations_scale(erkki, testee=1)
source("plotting.R"); plot.correlations_scale(erkki, testee=1)
res.correlations_scale <- cat_csv("../condor/correlations-scale", "^res.")
nrow(res.correlations_scale)
nrow(erkki)
source("plotting.R"); plot.correlations_scale(res.correlations_scale, testee=1)
source("plotting.R"); plot.correlations_scale(res.correlations_scale, testee=1)
source("plotting.R"); plot.correlations_scale(res.correlations_scale, testee=1)
unique(res.correlations_scale$neighbourhood_size)
ls
50*30
50*30*35
nrow(res.correlations_scale)
source("plotting.R"); plot.correlations_scale(res.correlations_scale, testee=1) + scale_x_log10()
source("plotting.R"); plot.correlations_scale(res.correlations_scale, testee=10) + scale_x_log10()
source("plotting.R"); plot.correlations_scale(res.correlations_scale, testee=10) 
source("plotting.R"); plot.correlations_scale(res.correlations_scale, testee=10) + scale_x_log10()
head(res.main_analysis)
ggplot(res.correlations_scale, aes(x=neighbourhood_size, y=tau)) + stat_summary(fun.y=mean)
ggplot(res.correlations_scale, aes(x=neighbourhood_size, y=temperature)) + stat_summary(fun.y=mean, geom="point")
ggplot(res.correlations_scale, aes(x=neighbourhood_size, y=temperature)) + stat_summary(fun.y=mean, geom="point") + scale_x_log10()
ggplot(res.correlations_scale, aes(x=neighbourhood_size, y=temperature)) + stat_summary(fun.y=mean, geom="point") + scale_x_log10() + geom_smooth()
ggplot(res.correlations_scale, aes(x=neighbourhood_size, y=temperature)) + stat_summary(fun.y=mean, geom="point") + scale_x_log10()
ggplot(res.correlations_scale, aes(x=neighbourhood_size, y=temperature)) + stat_summary(fun.y=median, geom="point") + scale_x_log10()
ggplot(res.correlations_scale, aes(x=neighbourhood_size, y=temperature)) + stat_summary(fun.y=median, geom="point") + scale_x_log10() + geom_smooth()
ggplot(res.correlations_scale, aes(x=neighbourhood_size, y=temperature)) + stat_summary(fun.y=median, geom="point") + scale_x_log10()
ggplot(res.correlations_scale, aes(x=neighbourhood_size, y=temperature)) + stat_summary(fun.y=median, geom="point") + scale_y_log10()
ggplot(res.correlations_scale, aes(x=neighbourhood_size, y=temperature)) + stat_summary(fun.y=median, geom="point") + scale_y_log10() + scale_x_log10()
ggplot(res.correlations_scale, aes(x=neighbourhood_size, y=temperature)) + stat_summary(fun.y=median, geom="point") + scale_y_log10() + scale_x_log10() + annotation_logticks()
ggplot(res.correlations_scale, aes(x=neighbourhood_size, y=temperature)) + stat_summary(fun.y=median, geom="point") + scale_y_log10() + scale_x_log10() + annotation_logticks() + theme_bw()
ggplot(res.correlations_scale, aes(x=neighbourhood_size, y=temperature)) + stat_summary(fun.y=median, geom="point") + scale_y_log10() + annotation_logticks() + theme_bw()
ggplot(res.correlations_scale, aes(x=neighbourhood_size, y=temperature)) + stat_summary(fun.y=median, geom="point") + annotation_logticks() + theme_bw()
ggplot(res.correlations_scale, aes(x=neighbourhood_size, y=temperature)) + stat_summary(fun.y=median, geom="point") + scale_y_log10() + annotation_logticks() + theme_bw()
ggplot(res.correlations_scale, aes(x=neighbourhood_size, y=temperature)) + stat_summary(fun.y=median, geom="point") + scale_y_log10() + scale_x_log10() + annotation_logticks() + theme_bw()
source("plotting.R"); plot.tau_against_scale(res.correlations_scale)
source("plotting.R"); plot.tau_against_scale(res.correlations_scale)
source("plotting.R"); plot.tau_against_scale(res.correlations_scale)
q()
erkki <- read.csv("../cpp/output/lattice/res.1.csv")
head(erkki)
require(ggplot2)
ggplot(erkki, aes(x=tau_actual, y=tau)) + geom_point()
ggplot(erkki, aes(x=tau_actual, y=tau)) + geom_point() + geom_smooth()
ggplot(erkki, aes(x=tau_actual, y=tau)) + geom_point() + geom_smooth(method=lm)
nrow(erkki)
length(unique(erkki$feature))
cor.test(erkki$tau_actual, erkki$tau, method="spearman")
head(erkki)
erkki <- read.csv("../cpp/output/walsian/res.4closest.1.csv")
cor.test(erkki$tau_actual, erkki$tau, method="spearman")
erkki <- read.csv("../cpp/output/walsian/res.under_1000km.1.csv")
cor.test(erkki$tau_actual, erkki$tau, method="spearman")
nrow(erkki)
erkki <- read.csv("../cpp/output/walsian/res.4closest.1.csv")
nrow(erkki)
cor.test(erkki$tau_actual, erkki$tau, method="spearman")
griddo <- expand.grid(seq(from=0.01, to=0.99, length.out=8), seq(from=0.01, to=0.99, length.out=8))
nrow(griddo)
erkki <- read.csv("../cpp/output/lattice/res.1.csv")
cor.test(erkki$tau_actual, erkki$tau, method="spearman")
erkki <- read.csv("../cpp/output/walsian/res.under_1000km.1.csv")
cor.test(erkki$tau_actual, erkki$tau, method="spearman")
griddo <- expand.grid(seq(from=0.01, to=0.99, length.out=8), seq(from=0.01, to=0.99, length.out=8))
ggplot(erkki, aes(x=tau_actual, y=tau)) + geom_point() + geom_smooth(method=lm)
ggplot(erkki[erkki$tau < 1=, ], aes(x=tau_actual, y=tau)) + geom_point() + geom_smooth(method=lm)
ggplot(erkki[erkki$tau <= 1, ], aes(x=tau_actual, y=tau)) + geom_point() + geom_smooth(method=lm)
ggplot(erkki[erkki$tau <= 10, ], aes(x=tau_actual, y=tau)) + geom_point() + geom_smooth(method=lm)
erkki <- read.csv("../cpp/output/walsian/res.4closest.1.csv")
ggplot(erkki, aes(x=tau_actual, y=tau)) + geom_point() + geom_smooth(method=lm)
cor.test(erkki$tau_actual, erkki$tau, method="spearman")
erkki <- read.csv("../cpp/output/lattice/res.1.csv")
cor.test(erkki$tau_actual, erkki$tau, method="spearman")
ggplot(erkki, aes(x=tau_actual, y=tau)) + geom_point() + geom_smooth(method=lm)
head(erkki)
ggplot(erkki[erkki$iteration==max(erkki$iteration), ], aes(x=tau_actual, y=tau)) + geom_point() + geom_smooth(method=lm)
cor.test(erkki[erkki$iteration==max(erkki$iteration), ]$tau_actual, erkki[erkki$iteration==max(erkki$iteration), ]$tau, method="spearman")
erkki <- read.csv("../cpp/output/walsian/res.4closest.1.csv")
cor.test(erkki[erkki$iteration==max(erkki$iteration), ]$tau_actual, erkki[erkki$iteration==max(erkki$iteration), ]$tau, method="spearman")
erkki <- read.csv("../cpp/output/lattice/res.1.csv")
cor.test(erkki[erkki$iteration==max(erkki$iteration), ]$tau_actual, erkki[erkki$iteration==max(erkki$iteration), ]$tau, method="spearman")
ggplot(erkki[erkki$iteration==max(erkki$iteration), ], aes(x=tau_actual, y=tau)) + geom_point() + geom_smooth(method=lm)
49*2500
49*2500*1000
49*2500*100
erkki <- read.csv("../cpp/output/lattice/res.1.csv")
cor.test(erkki$tau_actual, erkki$tau, method="spearman")
ggplot(erkki[erkki$iteration==max(erkki$iteration), ], aes(x=tau_actual, y=tau)) + geom_point() + geom_smooth(method=lm)
25000000/(49*2500)
erkki <- read.csv("../cpp/output/lattice/res.1.csv")
cor.test(erkki$tau_actual, erkki$tau, method="spearman")
25000000/(49*2500)
ggplot(erkki[erkki$iteration==max(erkki$iteration), ], aes(x=tau_actual, y=tau)) + geom_point() + geom_smooth(method=lm)
ggplot(erkki[erkki$iteration==max(erkki$iteration), ], aes(x=tau_actual, y=tau)) + geom_point() + geom_smooth(method=lm) + theme_bw()
q()
source("misc.R")
seq(from=1, to=100, by=3)
seq(from=1, to=100, by=2)
seq(from=1, to=100, by=3)
print_condor_script_scale_correlations(reps=10, neighbourhood_sizes=seq(from=1, to=100, by=3), outfile="tmp.txt")
49*2500
49*2500*100
q()
